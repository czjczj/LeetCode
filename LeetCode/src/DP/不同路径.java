package DP;

/**
 * @author czj
 * @date   2019��2��25��
 * 
 * һ��������λ��һ�� m x n ��������Ͻ� ����ʼ������ͼ�б��Ϊ��Start�� ����
	������ÿ��ֻ�����»��������ƶ�һ������������ͼ�ﵽ��������½ǣ�����ͼ�б��Ϊ��Finish������
	���ܹ��ж�������ͬ��·����
	���磬��ͼ��һ��7 x 3 �������ж��ٿ��ܵ�·����
	˵����m �� n ��ֵ�������� 100��
 * dp[i][j] ��ʾ�������Ϊi,j��λ���ߵ�Ŀ��λ�õ�·������
 */
public class 不同路径 {
	public static void main(String[] args) {
		 System.out.println(uniquePaths(3, 2));
	}
	public static int uniquePaths(int m, int n) {
        int[][] dp = new int[m][n];
        //��ʼ��ʱ��������Ҫ��ÿһ��λ�ø�ֵΪ-1
        for (int i = 0; i < dp.length; i++) {
			for (int j = 0; j < dp[0].length; j++) {
				dp[i][j] = -1;
			}
		}
        int res = dfs(dp,0,0);
		return res;
	}
	
	/**
	 * DP��̬�滮˼��
	 * ��Ϊÿһ������ֻ�������»��������ߣ�������ʼ��λ����(0,0)���յ�Ϊ(m,n)
	 * dp[i][j] ��ʾ�����Ǵ��������Ϊ��i,j����ʱ�����λ�õ��յ�(m,n)�Ĳ�ͬ���߷� 
	 *   1.��ô �����������ߵ��˱�Ե�� i==m �������ߵ��˱�Ե  j==n��������ʣ��һ�������ѡ�񣬴�ʱ�߷�ֻ��һ����
	 *   2.��������ߵ�ĳ��λ�����Ǽ�¼�˸�λ�õĵ��յ�ĸ�����  ���ǲ��ü��仯�ķ�ʽֱ�ӷ���  dp[i][j]����
	 *   
	 *   ����������߶�û�У����Ƕ����ڵ�ǰλ�õ��յ��·������Ȼ��Ҳ���������ڵ�ǰλ�ÿ���������һ��  i+1һ�Σ�   ����������һ��  j+1��
	 *   �ú����λ�÷����䵽�յ�·�����������³���ǰλ�õ�dp[i][j]����
	 */
	private static int dfs(int[][] dp, int i, int j) {
		if(i==dp.length-1 || j==dp[0].length-1) return 1;
		if(dp[i][j] != -1) return dp[i][j];
		int ans = 0;
		ans += dfs(dp, i+1,j);		
		ans += dfs(dp, i,j+1);
		dp[i][j] = ans;
		return ans;
	}
}
